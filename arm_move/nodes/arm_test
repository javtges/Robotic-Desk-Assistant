#!/usr/bin/env python


import rospy
import unittest
from arm_move.srv import reset, follow, step
from geometry_msgs.msg import Point


class ArmTest():
    def __init__ (self, *args):
        super(ArmTest,self).__init__(*args)
        rospy.init_node("arm_test")
        rospy.wait_for_service("/px100/reset")
        self.resetProxy = rospy.ServiceProxy("/px100/reset", reset)

        self.resetProxy.call(x=0.2, y=0, z=0.025, rx=0, ry=0, rz=0, rw=1)

    def test_traj_success(self):
        rospy.wait_for_service("/px100/step")
        self.stepProxy = rospy.ServiceProxy("/px100/step", step)
        
        setObj = step()
        setObj.x = 0.1
        setObj.y = 0.1
        setObj.z = 0.1

        error_code = self.stepProxy.call(point = setObj)
        self.assertEqual(error_code.output, 1)


    def test_traj_fail(self):
        rospy.wait_for_service("/px100/step")
        self.stepProxy = rospy.ServiceProxy("/px100/step", step)
        
        setObj = step()
        setObj.x = 0.1
        setObj.y = 0.1
        setObj.z = -10

        error_code = self.stepProxy.call(point = setObj)
        self.assertEqual(error_code.output, -1)

if __name__ == '__main__':
    ''' The main() function. '''

    import rostest
    rostest.run('arm_move', 'arm_test', ArmTest)
    ArmTest()